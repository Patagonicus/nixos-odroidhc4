diff --git a/Makefile b/Makefile
index bb2e9204..869ac5bb 100644
--- a/Makefile
+++ b/Makefile
@@ -899,7 +899,7 @@ KBUILD_CFLAGS   += $(call cc-option,-Werror=strict-prototypes)
 KBUILD_CFLAGS   += $(call cc-option,-Werror=date-time)
 
 # enforce correct pointer usage
-KBUILD_CFLAGS   += $(call cc-option,-Werror=incompatible-pointer-types)
+KBUILD_CFLAGS   += $(call cc-option,-Wno-error=incompatible-pointer-types)
 
 # Require designated initializers for all marked structures
 KBUILD_CFLAGS   += $(call cc-option,-Werror=designated-init)
diff --git a/arch/arm64/configs/odroidg12_defconfig b/arch/arm64/configs/odroidg12_defconfig
index 8d21df65..d3eb2b6a 100644
--- a/arch/arm64/configs/odroidg12_defconfig
+++ b/arch/arm64/configs/odroidg12_defconfig
@@ -430,7 +430,7 @@ CONFIG_ARM64_VA_BITS=39
 # CONFIG_CPU_BIG_ENDIAN is not set
 CONFIG_SCHED_MC=y
 # CONFIG_SCHED_SMT is not set
-CONFIG_NR_CPUS=8
+CONFIG_NR_CPUS=4
 CONFIG_HOTPLUG_CPU=y
 # CONFIG_NUMA is not set
 # CONFIG_PREEMPT_NONE is not set
@@ -1841,6 +1841,8 @@ CONFIG_AMLOGIC_POWER=y
 #
 CONFIG_AMLOGIC_PCIE=y
 # CONFIG_AMLOGIC_IRBLASTER_CORE is not set
+CONFIG_AMLOGIC_IRBLASTER_CORE=n
+CONFIG_AMLOGIC_IRBLASTER=n
 CONFIG_AMLOGIC_IIO=y
 
 #
diff --git a/drivers/amlogic/irblaster/sysfs.c b/drivers/amlogic/irblaster/sysfs.c
index 359d439c..e0e8eb05 100644
--- a/drivers/amlogic/irblaster/sysfs.c
+++ b/drivers/amlogic/irblaster/sysfs.c
@@ -16,6 +16,9 @@
  */
 
 #include <linux/device.h>
+#include <linux/init.h>
+#include <linux/export.h>
+#include <linux/types.h>
 #include <linux/mutex.h>
 #include <linux/err.h>
 #include <linux/slab.h>
diff --git a/fs/userfaultfd.c b/fs/userfaultfd.c
index 471f26a2..97bd4ef3 100644
--- a/fs/userfaultfd.c
+++ b/fs/userfaultfd.c
@@ -496,7 +496,8 @@ static int userfaultfd_release(struct inode *inode, struct file *file)
 					 new_flags, vma->anon_vma,
 					 vma->vm_file, vma->vm_pgoff,
 					 vma_policy(vma),
-					 NULL_VM_UFFD_CTX);
+					 NULL_VM_UFFD_CTX,
+					 vma_get_anon_name(vma));
 			if (prev)
 				vma = prev;
 			else
@@ -555,9 +556,7 @@ static unsigned int userfaultfd_poll(struct file *file, poll_table *wait)
 		return POLLERR;
 	case UFFD_STATE_RUNNING:
 		/*
-		 * poll() never guarantees that read won't block.
-		 * userfaults can be waken before they're read().
-		 */
+		 * poll() never guarantees that read won't block.  userfaults can be waken before they're read().  */
 		if (unlikely(!(file->f_flags & O_NONBLOCK)))
 			return POLLERR;
 		/*
